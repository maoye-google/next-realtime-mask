services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: realtime-mask-frontend
    ports:
      - "${PORT}:5173"
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    environment:
      - REACT_APP_BACKEND_URL=http://localhost:8000 # Or http://backend:8000 if running purely containerized
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: realtime-mask-backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=local_kafka:9092
      - MONGO_URI=mongodb://mongo:27017/realtime_mask_db
      - GOOGLE_APPLICATION_CREDENTIALS=/app/gcp-service-account.json # Example path
    depends_on:
      - kafka
      - mongodb
    networks:
      - app-network

  processing-worker:
    build:
      context: ./processing
      dockerfile: Dockerfile
    container_name: realtime-mask-processing
    volumes:
      - ./processing:/app
      - ./gcp-service-account.json:/app/gcp-service-account.json:ro # Mount service account key
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=local_kafka:9092
      - GOOGLE_APPLICATION_CREDENTIALS=/app/gcp-service-account.json # Example path
    depends_on:
      - kafka
    networks:
      - app-network

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: local_kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://local_kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_SESSION_TIMEOUT_MS: 30000
      KAFKA_HEARTBEAT_INTERVAL_MS: 3000
    user: root # Add this
    depends_on:
      - zookeeper
    networks:
      - app-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    user: root # Add this
    networks:
      - app-network

volumes:
  mongodb_data:

networks:
  app-network:
    driver: bridge